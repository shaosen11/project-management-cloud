<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.edu.lingnan.dao.ProjectMessageDao">

    <resultMap type="com.edu.lingnan.entity.ProjectMessage" id="ProjectMessageMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="projectId" column="project_id" jdbcType="INTEGER"/>
        <result property="fromUserId" column="from_user_id" jdbcType="INTEGER"/>
        <result property="toUserId" column="to_user_id" jdbcType="INTEGER"/>
        <result property="typeId" column="type_id" jdbcType="INTEGER"/>
        <result property="message" column="message" jdbcType="VARCHAR"/>
        <result property="time" column="time" jdbcType="VARCHAR"/>
        <result property="isRead" column="is_read" jdbcType="INTEGER"/>
        <result property="deleteFlag" column="delete_flag" jdbcType="INTEGER"/>
        <result property="allFlag" column="all_flag" jdbcType="INTEGER"/>
        <result property="adminFlag" column="admin_flag" jdbcType="INTEGER"/>
        <result property="needToDo" column="need_to_do" jdbcType="INTEGER"/>
        <collection property="projectMessageType" column="{id=type_id}"
                    select="com.edu.lingnan.dao.ProjectMessageTypeDao.getById">
        </collection>
    </resultMap>

    <select id="getByProjectIdAndUserId" resultMap="ProjectMessageMap">
        select *
        from project_management_project_cloud.project_message
        where delete_flag = 1
          and project_id = #{projectId}
          and to_user_id = #{userId}
        order by time
            desc limit #{offset},#{pageSize}
    </select>


    <select id="getByProjectId" resultMap="ProjectMessageMap">
        select *
        from project_management_project_cloud.project_message
        where delete_flag = 1
          and all_flag = 1
          and project_id = #{projectId}
        order by time desc limit #{offset},#{pageSize}
    </select>


    <update id="updateProjectMessageIsReadByProjectMessageId">
        update project_management_project_cloud.project_message
        set
        <trim suffixOverrides=",">
            <if test="isRead != null">
                is_read = 0,
            </if>
        </trim>
        where id = #{projectMessageId}
    </update>

    <select id="getAllNeedToByProjectId" resultMap="ProjectMessageMap">
        select *
        from project_management_project_cloud.project_message
        where delete_flag = 1
          and is_read = 1
          and admin_flag = 1
          and need_to_do = 1
          and project_id = #{projectId}
        order by time desc limit #{offset},#{pageSize}
    </select>

    <select id="getById" resultMap="ProjectMessageMap">
        select *
        from project_management_project_cloud.project_message
        where delete_flag = 1
          and id = #{id};
    </select>

    <select id="getProjectMessageCount" resultType="int">
        select count(*)
        from project_management_project_cloud.project_message
        where delete_flag = 1
          and is_read = 1
          and project_id = #{projectId}
          and to_user_id = #{userId}
    </select>

    <select id="getProjectMessageNeedToDoCount" resultType="int">
        select count(*)
        from project_management_project_cloud.project_message
        where delete_flag = 1
          and is_read = 1
          and admin_flag = 1
          and need_to_do = 1
          and project_id = #{projectId}
    </select>


</mapper>